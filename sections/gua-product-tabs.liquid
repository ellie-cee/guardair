{% assign warning65_text = product.metafields.custom.warning65_text.value %}
{% assign warning65_url = product.metafields.custom.warning65_url.value %}
{% assign operation_manual_url = product.metafields.custom.literature_operation_manual_url.value %}
{% assign sell_sheet_url = product.metafields.custom.literature_sell_sheet_url.value %}
{% assign parts = product.selected_or_first_available_variant.metafields.custom.replacement_parts.value  %}
{% assign accessories = product.selected_or_first_available_variant.metafields.custom.accessories.value  %}

<div class="gua_product_info itg_full_product_info--disabled">
<div class="tabs"><div class="nav-wrapper">
  <ul id="tabs-nav">

      {%- for block in section.blocks -%}
        {% if forloop.index == 1 %}{% assign active_class = 'active' %}{% else %}{% assign active_class = '' %}{% endif %}
        {%- case block.type -%}
              {%- when '@app' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">App{{  block.title }}</li>
              {%- when 'product_description' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Product Details</li>                     
              {%- when 'custom_liquid' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Custom {{ block.title }}</li>
              {%- when 'rating' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Reviews</li>       
              {%- when 'specifications' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Specifications</li>         
              {%- when 'parts' -%}
                {% if parts %}<li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Replacement Parts</li>{% endif %}
              {%- when 'accessories' -%}
                {% if accessories %}<li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Accessories</li>{% endif %}
              {% endcase %}
      {% endfor %}

  </ul></div>

  <div id="tabs-content">

      {%- for block in section.blocks -%}
          {% if forloop.index == 1 %}{% assign display = 'block' %}{% else %}{% assign display = 'none' %}{% endif %}
        {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'custom_liquid' -%}
                <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content specifications" style="display: {{ display }};">                   
                  {{ block.settings.custom_liquid }}
                </div>

              {%- when 'rating' -%}
                <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content" style="display: {{ display }};">                       
                    <div id="klaviyo-reviews-all" data-id="{{ product.id }}"></div>
                    </div>

            {%- when 'specifications' -%}
              <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content specifications" style="display: {{ display }};">     
                          <h3 class="h2 tab-heading">Specifications</h3>                           
                {% render 'gua-specifications',highlight:block.settings.highlight_variant,product:product,block:block %}
              </div>

            {%- when 'product_description' -%}
              <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content product-details" style="display: {{ display }};">   
                <div class="grid grid--1-col grid--2-col-tablet">
                <div id="details-left" class="grid__item">
                  <h2 class="h1">Product Details</h2>
                      <div class="rich-text__caption {{ block.settings.font_style }}" {{ block.shopify_attributes }}>

                          {%- if product.description != blank  -%}
                            <div class="rte {{ section.settings.font_style }}">{{ product.description }}</div>
                          {% endif %}
                      </div> 
                          {% if operation_manual_url != blank or sell_sheet_url != blank %}
                          <h3 class="h2 tab-heading">Documents</h3>          
                          <ul>
                            {% if operation_manual_url != blank %}
                              <li>
                                <a href="{{ operation_manual_url }}" target="_blank">Operating Instructions</a>
                              </li>
                            {% endif %}
                            {% if sell_sheet_url != blank %}
                              <li><a href="{{ sell_sheet_url }}" target="_blank">Sell Sheet</a></li>
                            {% endif %}
                          </ul>
                      {% endif %}
                </div>
                <div id="details-right" class="grid__item">

                    {% if block.settings.include_collapsible_tabs %}
                      <div id="collapsible-tab-content"></div>
                    {% endif %}
                  </div>
       
                </div>
              </div>

            {%- when 'custom_text' -%}
              <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content specifications" style="display: {{ display }};">    
                  <h3 class="h2 tab-heading">TITLE</h3>              
                  <p class="rich-text__caption" {{ block.shopify_attributes }}>
                      {{ block.settings.custom_text }}
                  </p>    
                </div>

            {%- when 'parts' -%}{% if parts %}{% assign tab_index = forloop.index %}
                  {%- for variant in product.variants limit: 1 -%}
                  {% if variant.metafields.custom.replacement_parts.value != blank %}
              <div data-tab-content="tab{{ tab_index }}" id="tab{{ forloop.index }}" class="tab-content" style="display: {{ display }};">   
                  <h3 class="h2 tab-heading">Replacement Parts</h3>
                      <ul class="product-grid">
                        {%- for variant in product.variants -%}
                          {%- assign current_variant = product.selected_or_first_available_variant -%}
                          {% if current_variant.title == variant.title %}
                              <div class="grid">                        
                            {% for product in parts %}
                                 <div class="grid__item">{% render 'card-product', card_product:product %}</div>
                              {% endfor %}
                            </div>                       
                        {% endif %}

                        {% endfor %}
                      </ul>
                    </div>
                    {% endif %}
                {% endfor %}{% endif %}

            {%- when 'accessories' -%}{% if accessories %}{% assign tab_index = forloop.index %}
                  {%- for variant in product.variants limit: 1 -%}
                  {% if variant.metafields.custom.accessories.value != blank %}
              <div data-tab-content="tab{{ tab_index }}" id="tab{{ forloop.index }}" class="tab-content" style="display: {{ display }};">   
                  <h3 class="h2 tab-heading">Accessories</h3>
                      <ul class="product-grid">
                        {%- for variant in product.variants -%}
                          {%- assign current_variant = product.selected_or_first_available_variant -%}
                          {% if current_variant.title == variant.title %}
                            <div class="grid">                        
                            {% for product in accessories %}
                                 <div class="grid__item">{% render 'card-product', card_product:product %}</div>
                              {% endfor %}
                            </div>     
                          {% endif %}
                        {% endfor %}
                      </ul>
                    </div>
                    {% endif %}
                {% endfor %}{% endif %}

            {%- endcase -%}
          {% endfor %}

    </div>
    
  </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
  const tabsNav = document.querySelector('#tabs-nav');
  
  if (!tabsNav) return;
  
  const tabItems = tabsNav.querySelectorAll('li[data-tab]');
  const tabContents = document.querySelectorAll('[data-tab-content]');
  
  // Debug: Log what we found
  console.log('Tab items found:', tabItems.length);
  console.log('Tab contents found:', tabContents.length);
  
  function switchTab(targetTab) {
    // Remove active class from all tab list items
    tabItems.forEach(item => {
      item.classList.remove('active');
    });
    
    // Hide all tab contents
    tabContents.forEach(content => {
      content.classList.add('tab-hidden');
      content.classList.remove('active', 'tab-visible');
    });
    
    // Add active class to clicked tab list item
    const activeItem = tabsNav.querySelector(`li[data-tab="${targetTab}"]`);
    if (activeItem) {
      activeItem.classList.add('active');
    }
    
    // Show corresponding tab content
    const activeContent = document.querySelector(`[data-tab-content="${targetTab}"]`);
    {% comment %} console.log('Looking for content with data-tab-content="' + targetTab + '"'); {% endcomment %}
    {% comment %} console.log('Found content:', activeContent); {% endcomment %}
    
    if (activeContent) {
      activeContent.classList.remove('tab-hidden');
      activeContent.classList.add('active', 'tab-visible');
      {% comment %} console.log('Set display to block for:', activeContent); {% endcomment %}
    } else {
      {% comment %} console.log('No content found for tab:', targetTab); {% endcomment %}
    }
  }
  
  // Add click event listeners to all tab list items
  tabItems.forEach(item => {
    item.addEventListener('click', function(e) {
      e.preventDefault();
      const targetTab = this.getAttribute('data-tab');
      {% comment %} console.log('Tab clicked:', targetTab); {% endcomment %}
      switchTab(targetTab);
    });
  });
  
  // Initialize first tab as active on page load
  if (tabItems.length > 0) {
    const firstTab = tabItems[0].getAttribute('data-tab');
    switchTab(firstTab);
  }
});
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sourceContent = document.getElementById('collapsible-block');
  const targetContainer = document.getElementById('collapsible-tab-content');
  
  if (sourceContent && targetContainer) {
    // Clone the content to preserve event listeners if needed
    const clonedContent = sourceContent.cloneNode(true);
    clonedContent.style.display = 'block';
    clonedContent.id = 'moved-collapsible-tabs'; // Change ID to avoid duplicates
    
    // Move the content
    targetContainer.appendChild(clonedContent);
    sourceContent.style.display = 'none';
  }
});
</script>

{% schema %}
  {
    "name": "GUA Product Tabs",
    "enabled_on": {
      "templates": ["product"]
    },
   "settings": [
        {
          "type": "product_list",          
          "id": "products",
          "label": "Products",
          "info": "Select products"
        },
        {
          "id": "option_name",
          "label": "Option Name",
          "type": "text",
          "default": "Extension Length"
        }

      ],
      "blocks":[
        {
      "type": "product_description",
      "name": "Product Description",
      "limit": 1,
      "settings": [           
            {
              "type": "select",
              "id": "font_style",
              "options": [
                {
                  "value": "inline-richtext",
                  "label": "Default"
                },
                {
                  "value": "plain-with-buttons",
                  "label": "Plain with Buttons"
                },        
                {
                  "value": "blue-subtitle",
                  "label": "Blue Subtitles"
                }
              ],
              "default": "inline-richtext",
              "label": "Font Style"
            },
            {
              "type": "header",
              "content": "Accordion Content"
            },           
            {
              "type": "checkbox",
              "id": "include_collapsible_tabs",
              "label": "Show Collapsible Tabs section",
              "info": "Pulls from Tab Section below Product Tabs",
              "default":false
            }
      ]
    },         
          {
            "type": "specifications",
            "name": "Specifications",
            "limit": 1,
            "settings": [
              {
                "type": "checkbox",
                "id": "highlight_variant",
                "default": false,
                "label": "Highlight current variant"
              },
              {
                "type": "header",
                "content": "Fields"
              },
              {
                "type": "paragraph",
                "content": "By default, the specific fields are determined by the product type.  The below fields can be added."
              },        
              {
                "type": "checkbox",
                "id": "variant_title",
                "default": false,
                "label": "Variant Title"
              },
              {
                "type": "checkbox",
                "id": "variant_image",
                "default": false,
                "label": "Variant Image"
              },
              {
                "type": "range",
                "id": "variant_image_size",
                "default": 90,
                "label": "Variant Image Size",
                "min":45,
                "max":300,
                "step":15
              },        
              {
                "type": "checkbox",
                "id": "type_fields",
                "default": true,
                "label": "Show Product Type Specific Fields",
                "info":"Example Inlet, Max Pressure, etx"
              },
              {
                "type": "header",
                "content": "Section Specific Fields"
              },        
              {
                "type": "text",
                "id": "special_field",
                "label": "Rename Title Info",
                "info":"Add Label for information trailing the dash in title"
              },
              {
                "type": "text",
                "id": "variant_metafield_label",
                "label": "Variant Field Label",
                "info":"Add Label"
              },        
            {
                "type": "text",
                "id": "variant_metafield_namespace",
                "label": "Variant Metafield Namespace",
                "info": "Enter the namespace for the variant metafield (e.g., 'custom' or 'app')"
              },
              {
                "type": "text",
                "id": "variant_metafield_key",
                "label": "Variant Metafield Key",
                "info": "Enter the key for the variant metafield (e.g., 'material' or 'weight')"
              }
            ]
          },
    {
      "type": "custom_liquid",
      "name": "t:sections.custom-liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.custom-liquid.settings.custom_liquid.label",
          "info": "t:sections.custom-liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "parts",
      "name": "Replacement Parts",
      "settings": [
      ]
    },
    {
      "type": "accessories",
      "name": "Accessories",
      "settings": [
      ]
    },      
    {
      "type": "rating",
      "name": "t:sections.featured-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.featured-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.featured-product.blocks.text.name",
      "settings": [
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.featured-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__3.label"
            },
            {
              "value": "heading",
              "label": "Heading"
            }
          ],
          "default": "body",
          "label": "t:sections.featured-product.blocks.text.settings.text_style.label"
        }
      ]
    },      
    {
      "type": "custom_text",
      "name": "Custom Text",
      "settings": [
        {
          "type": "richtext",
          "id": "custom_text",
          "label": "Custom Text",
        }
      ]
    },    
  ],     
  "presets": [
    {
      "name": "GUA Product Tabs",
      "category":"Guardair Catalog",
      "blocks": [
        {
          "type": "product_description"
        }
      ]
    }
  ]
}
{% endschema %}