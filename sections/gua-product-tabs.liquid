{% assign warning65_text = product.metafields.custom.warning65_text.value %}
{% assign warning65_url = product.metafields.custom.warning65_url.value %}
{% assign operation_manual_url = product.metafields.custom.literature_operation_manual_url.value %}
{% assign sell_sheet_url = product.metafields.custom.literature_sell_sheet_url.value %}
{% assign landing_pages = product.metafields.custom.product_info_image_url %}
{% assign parts = product.selected_or_first_available_variant.metafields.custom.replacement_parts.value  %}
{% assign accessories = product.selected_or_first_available_variant.metafields.custom.accessories.value  %}
{% assign pdf_icon = '<svg height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M8.267 14.68c-.184 0-.308.018-.372.036v1.178c.076.018.171.023.302.023.479 0 .774-.242.774-.651 0-.366-.254-.586-.704-.586zm3.487.012c-.2 0-.33.018-.407.036v2.61c.077.018.201.018.313.018.817.006 1.349-.444 1.349-1.396.006-.83-.479-1.268-1.255-1.268z"/><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6zM9.498 16.19c-.309.29-.765.42-1.296.42a2.23 2.23 0 0 1-.308-.018v1.426H7v-3.936A7.558 7.558 0 0 1 8.219 14c.557 0 .953.106 1.22.319.254.202.426.533.426.923-.001.392-.131.723-.367.948zm3.807 1.355c-.42.349-1.059.515-1.84.515-.468 0-.799-.03-1.024-.06v-3.917A7.947 7.947 0 0 1 11.66 14c.757 0 1.249.136 1.633.426.415.308.675.799.675 1.504 0 .763-.279 1.29-.663 1.615zM17 14.77h-1.532v.911H16.9v.734h-1.432v1.604h-.906V14.03H17v.74zM14 9h-1V4l5 5h-4z"/></svg>' %}

<div class="gua_product_info itg_full_product_info--disabled">
<div class="tabs"><div class="nav-wrapper">
  <ul id="tabs-nav">

      {%- for block in section.blocks -%}
        {% if forloop.index == 1 %}{% assign active_class = 'active' %}{% else %}{% assign active_class = '' %}{% endif %}
        {%- case block.type -%}
              {%- when '@app' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">App{{  block.title }}</li>
              {%- when 'product_description' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Product Details</li>                     
              {%- when 'custom_liquid' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Custom {{ block.title }}</li>
              {%- when 'rating' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Reviews</li>       
              {%- when 'specifications' -%}
                <li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Specifications</li>         
              {%- when 'parts' -%}
                {% if parts %}<li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">{{ block.settings.parts_tab }}</li>{% endif %}
              {%- when 'accessories' -%}
                {% if accessories %}<li data-tab="tab{{ forloop.index }}" class="{{ active_class }}">Accessories</li>{% endif %}
              {% endcase %}
      {% endfor %}

  </ul></div>

  <div id="tabs-content">

      {%- for block in section.blocks -%}
          {% if forloop.index == 1 %}{% assign display = 'block' %}{% else %}{% assign display = 'none' %}{% endif %}
        {%- case block.type -%}
              {%- when '@app' -%}
                {% render block %}
              {%- when 'custom_liquid' -%}
                <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content specifications" style="display: {{ display }};">                   
                  {{ block.settings.custom_liquid }}
                </div>

              {%- when 'rating' -%}
                <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content" style="display: {{ display }};">                       
                    <div id="klaviyo-reviews-all" data-id="{{ product.id }}"></div>
                    </div>

            {%- when 'specifications' -%}
              <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content specifications" style="display: {{ display }};">     
                          <h3 class="h2 tab-heading">Specifications</h3>                           
                {% render 'gua-specifications',highlight:block.settings.highlight_variant,product:product,block:block %}
              </div>

            {%- when 'product_description' -%}
              <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content product-details" style="display: {{ display }};">   
                <div class="grid grid--1-col grid--2-col-tablet">
                <div id="details-left" class="grid__item">
                  <h2 class="h1"><span>Product Details</span></h2>
                      <div class="rich-text__caption {{ block.settings.font_style }}" {{ block.shopify_attributes }}>

                          {%- if product.description != blank  -%}
                            <div class="rte {{ section.settings.font_style }}">{{ product.description }}</div>
                          {% endif %}
                      </div> 
                      {% if block.settings.include_literature or block.settings.include_landing_pages %}
                          <h3 class="h2 tab-heading">{{ block.settings.resource_label }}</h3>                          
                        {% if operation_manual_url != blank or sell_sheet_url != blank %} 
                          <h3 class="h3">Literature</h3>
                          <ul class="documents">
                            {% if operation_manual_url != blank %}
                              <li>
                                <a href="{{ operation_manual_url }}" target="_blank">{% if sell_sheet_url contains 'pdf' %}{{ pdf_icon }}{% endif %} Operating Instructions</a>
                              </li>
                            {% endif %}
                            {% if sell_sheet_url != blank %}
                              <li><a href="{{ sell_sheet_url }}" target="_blank">{% if sell_sheet_url contains 'pdf' %}{{ pdf_icon }}{% endif %} Sell Sheet</a></li>
                            {% endif %}
                          </ul>
                        {% endif %}
                        {% if landing_pages != blank %} 
                          <h3 class="h3">Series Information</h3>    
                            {% if landing_pages != blank %}<ul class="related">
                              <li><a href="{{ landing_pages }}" target="_blank">Series Information</a></li></ul>
                            {% endif %}                                                
                        {% endif %}
                      {% endif %}
                </div>
                <div id="details-right" class="grid__item">

                    {% if block.settings.include_collapsible_tabs %}
                      <div id="collapsible-tab-content"></div>
                    {% endif %}
                  </div>
       
                </div>
              </div>

            {%- when 'custom_text' -%}
              <div data-tab-content="tab{{ forloop.index }}" id="tab{{ forloop.index }}" class="tab-content specifications" style="display: {{ display }};">    
                  <h3 class="h2 tab-heading">TITLE</h3>              
                  <p class="rich-text__caption" {{ block.shopify_attributes }}>
                      {{ block.settings.custom_text }}
                  </p>    
                </div>

            {%- when 'parts' -%}
              {% assign tab_index = forloop.index %}
              {% if parts or accessories %}<div data-tab-content="tab{{ tab_index }}" id="tab{{ forloop.index }}" class="tab-content" style="display: {{ display }};">{% endif %}
                  {% if parts %}
                      {%- for variant in product.variants limit: 1 -%}
                      {% if variant.metafields.custom.replacement_parts.value != blank %}
                      <h3 class="h2 tab-heading">{{ block.settings.parts_label }}</h3>
                          <ul class="product-grid">
                            {% render 'gua-variant-metafield',variant_metafield:'custom.replacement_parts',product:product %}
                          </ul>
                        {% endif %}
                    {% endfor %}{% endif %}

                    {% if accessories %}
                      {%- for variant in product.variants limit: 1 -%}
                      {% if variant.metafields.custom.accessories.value != blank %}
                      <h3 class="h2 tab-heading">{{ block.settings.accesories_label }}</h3>
                          <ul class="product-grid">
                            {% render 'gua-variant-metafield',variant_metafield:'custom.accessories',product:product %}
                          </ul>
                        {% endif %}
                    {% endfor %}{% endif %}
            {% if parts or accessories %}</div>{% endif %} 


            {%- when 'accessories' -%}{% if accessories %}{% assign tab_index = forloop.index %}
                  {%- for variant in product.variants limit: 1 -%}
                  {% if variant.metafields.custom.accessories.value != blank %}
              <div data-tab-content="tab{{ tab_index }}" id="tab{{ forloop.index }}" class="tab-content" style="display: {{ display }};">   
                  <h3 class="h2 tab-heading">Accessories</h3>
                      <ul class="product-grid">
                         {% render 'gua-variant-metafield',variant_metafield:'custom.accessories',product:product %}
                      </ul>
                    </div>
                    {% endif %}
                {% endfor %}{% endif %}

            {%- endcase -%}
          {% endfor %}

    </div>
    
  </div>
</div>


<script>
document.addEventListener('DOMContentLoaded', function() {
  const tabsNav = document.querySelector('#tabs-nav');
  
  if (!tabsNav) return;
  
  const tabItems = tabsNav.querySelectorAll('li[data-tab]');
  const tabContents = document.querySelectorAll('[data-tab-content]');
  
  // Debug: Log what we found
  console.log('Tab items found:', tabItems.length);
  console.log('Tab contents found:', tabContents.length);
  
  function switchTab(targetTab) {
    // Remove active class from all tab list items
    tabItems.forEach(item => {
      item.classList.remove('active');
    });
    
    // Hide all tab contents
    tabContents.forEach(content => {
      content.classList.add('tab-hidden');
      content.classList.remove('active', 'tab-visible');
    });
    
    // Add active class to clicked tab list item
    const activeItem = tabsNav.querySelector(`li[data-tab="${targetTab}"]`);
    if (activeItem) {
      activeItem.classList.add('active');
    }
    
    // Show corresponding tab content
    const activeContent = document.querySelector(`[data-tab-content="${targetTab}"]`);
    {% comment %} console.log('Looking for content with data-tab-content="' + targetTab + '"'); {% endcomment %}
    {% comment %} console.log('Found content:', activeContent); {% endcomment %}
    
    if (activeContent) {
      activeContent.classList.remove('tab-hidden');
      activeContent.classList.add('active', 'tab-visible');
      {% comment %} console.log('Set display to block for:', activeContent); {% endcomment %}
    } else {
      {% comment %} console.log('No content found for tab:', targetTab); {% endcomment %}
    }
  }
  
  // Add click event listeners to all tab list items
  tabItems.forEach(item => {
    item.addEventListener('click', function(e) {
      e.preventDefault();
      const targetTab = this.getAttribute('data-tab');
      {% comment %} console.log('Tab clicked:', targetTab); {% endcomment %}
      switchTab(targetTab);
    });
  });
  
  // Initialize first tab as active on page load
  if (tabItems.length > 0) {
    const firstTab = tabItems[0].getAttribute('data-tab');
    switchTab(firstTab);
  }
});
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const sourceContent = document.getElementById('collapsible-block');
  const targetContainer = document.getElementById('collapsible-tab-content');
  
  if (sourceContent && targetContainer) {
    // Clone the content to preserve event listeners if needed
    const clonedContent = sourceContent.cloneNode(true);
    clonedContent.style.display = 'block';
    clonedContent.id = 'moved-collapsible-tabs'; // Change ID to avoid duplicates
    
    // Move the content
    targetContainer.appendChild(clonedContent);
    sourceContent.style.display = 'none';
  }
});
</script>

{% schema %}
  {
    "name": "GUA Product Tabs",
    "enabled_on": {
      "templates": ["product"]
    },
   "settings": [
        {
          "type": "product_list",          
          "id": "products",
          "label": "Products",
          "info": "Select products"
        },
        {
          "id": "option_name",
          "label": "Option Name",
          "type": "text",
          "default": "Extension Length"
        }

      ],
      "blocks":[
        {
      "type": "product_description",
      "name": "Product Description",
      "limit": 1,
      "settings": [           
            {
              "type": "select",
              "id": "font_style",
              "options": [
                {
                  "value": "inline-richtext",
                  "label": "Default"
                },
                {
                  "value": "plain-with-buttons",
                  "label": "Plain with Buttons"
                },        
                {
                  "value": "blue-subtitle",
                  "label": "Blue Subtitles"
                }
              ],
              "default": "inline-richtext",
              "label": "Font Style"
            },
            {
              "type": "header",
              "content": "Resources"
            },
              {
                "type": "text",
                "id": "resource_label",
                "label": "Resource Section Heading",
                "default":"Resources"
              },             
            {
              "type": "checkbox",
              "id": "include_literature",
              "label": "Show Literature",
              "info": "Pulls from product.metafields.custom.literature_operation_manual_url and products.metafields.custom.literature_sell_sheet_url",
              "default":false
            },
            {
              "type": "checkbox",
              "id": "include_landing_pages",
              "label": "Show Landing Pages",
              "info": "Pulls from ?",
              "default":false
            },            
            {
              "type": "header",
              "content": "Accordion Content"
            },           
            {
              "type": "checkbox",
              "id": "include_collapsible_tabs",
              "label": "Show Collapsible Tabs section",
              "info": "Pulls from Tab Section below Product Tabs",
              "default":false
            }
      ]
    },         
          {
            "type": "specifications",
            "name": "Specifications",
            "limit": 1,
            "settings": [
              {
                "type": "checkbox",
                "id": "highlight_variant",
                "default": false,
                "label": "Highlight current variant"
              },
              {
                "type": "header",
                "content": "Fields"
              },
              {
                "type": "paragraph",
                "content": "By default, the specific fields are determined by the product type.  The below fields can be added."
              },        
              {
                "type": "checkbox",
                "id": "variant_title",
                "default": false,
                "label": "Variant Title"
              },
              {
                "type": "checkbox",
                "id": "variant_image",
                "default": false,
                "label": "Variant Image"
              },
              {
                "type": "range",
                "id": "variant_image_size",
                "default": 90,
                "label": "Variant Image Size",
                "min":45,
                "max":300,
                "step":15
              },        
              {
                "type": "checkbox",
                "id": "type_fields",
                "default": true,
                "label": "Show Product Type Specific Fields",
                "info":"Example Inlet, Max Pressure, etx"
              },
              {
                "type": "header",
                "content": "Section Specific Fields"
              },        
              {
                "type": "text",
                "id": "special_field",
                "label": "Rename Title Info",
                "info":"Add Label for information trailing the dash in title"
              },
              {
                "type": "text",
                "id": "variant_metafield_label",
                "label": "Variant Field Label",
                "info":"Add Label"
              },        
              {
                "type": "text",
                "id": "variant_metafield",
                "label": "Variant Metafield Namespace/Key",
                "info":"Example: custom.max_pressure"
              }
            ]
          },
    {
      "type": "custom_liquid",
      "name": "t:sections.custom-liquid.name",
      "settings": [
        {
          "type": "liquid",
          "id": "custom_liquid",
          "label": "t:sections.custom-liquid.settings.custom_liquid.label",
          "info": "t:sections.custom-liquid.settings.custom_liquid.info"
        }
      ]
    },
    {
      "type": "parts",
      "name": "Replacement Parts",
      "settings": [
        {
          "type": "text",
          "id": "parts_tab",
          "default": "Parts & Accessories",
          "label": "Tab Label"
        },
        {
          "type": "text",
          "id": "parts_label",
          "default": "Replacement Parts",
          "label": "Parts Heading"
        },        
        {
          "type": "text",
          "id": "accesories_label",
          "default": "Accessories",
          "label": "Accessories Heading"
        }             
      ]
    },
    {
      "type": "accessories",
      "name": "Accessories",
      "settings": [
      ]
    },      
    {
      "type": "rating",
      "name": "t:sections.featured-product.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "paragraph",
          "content": "t:sections.featured-product.blocks.rating.settings.paragraph.content"
        }
      ]
    },
    {
      "type": "@app"
    },
    {
      "type": "text",
      "name": "t:sections.featured-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text_tab",
          "default": "Tab Name",
          "label": "Tab Name"
        },
        {
          "type": "text",
          "id": "text_heading",
          "default": "Tab Section",
          "label": "Tab Heading"
        },          
        {
          "type": "inline_richtext",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.featured-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.featured-product.blocks.text.settings.text_style.options__3.label"
            },
            {
              "value": "heading",
              "label": "Heading"
            }
          ],
          "default": "body",
          "label": "t:sections.featured-product.blocks.text.settings.text_style.label"
        }
      ]
    }  
  ],     
  "presets": [
    {
      "name": "GUA Product Tabs",
      "category":"Guardair Catalog",
      "blocks": [
        {
          "type": "product_description"
        }
      ]
    }
  ]
}
{% endschema %}